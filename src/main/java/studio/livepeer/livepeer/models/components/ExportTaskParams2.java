/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package studio.livepeer.livepeer.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import studio.livepeer.livepeer.utils.Utils;

public class ExportTaskParams2 {

    @JsonProperty("ipfs")
    private IpfsExportParams ipfs;

    @JsonCreator
    public ExportTaskParams2(
            @JsonProperty("ipfs") IpfsExportParams ipfs) {
        Utils.checkNotNull(ipfs, "ipfs");
        this.ipfs = ipfs;
    }

    @JsonIgnore
    public IpfsExportParams ipfs() {
        return ipfs;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ExportTaskParams2 withIpfs(IpfsExportParams ipfs) {
        Utils.checkNotNull(ipfs, "ipfs");
        this.ipfs = ipfs;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExportTaskParams2 other = (ExportTaskParams2) o;
        return 
            java.util.Objects.deepEquals(this.ipfs, other.ipfs);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            ipfs);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ExportTaskParams2.class,
                "ipfs", ipfs);
    }
    
    public final static class Builder {
 
        private IpfsExportParams ipfs;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder ipfs(IpfsExportParams ipfs) {
            Utils.checkNotNull(ipfs, "ipfs");
            this.ipfs = ipfs;
            return this;
        }
        
        public ExportTaskParams2 build() {
            return new ExportTaskParams2(
                ipfs);
        }
    }
}

