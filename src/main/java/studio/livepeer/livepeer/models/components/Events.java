/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package studio.livepeer.livepeer.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import studio.livepeer.livepeer.utils.Utils;

public enum Events {
    STREAM_STARTED("stream.started"),
    STREAM_DETECTION("stream.detection"),
    STREAM_IDLE("stream.idle"),
    RECORDING_READY("recording.ready"),
    RECORDING_STARTED("recording.started"),
    RECORDING_WAITING("recording.waiting"),
    MULTISTREAM_CONNECTED("multistream.connected"),
    MULTISTREAM_ERROR("multistream.error"),
    MULTISTREAM_DISCONNECTED("multistream.disconnected"),
    PLAYBACK_USER_NEW("playback.user.new"),
    PLAYBACK_ACCESS_CONTROL("playback.accessControl"),
    ASSET_CREATED("asset.created"),
    ASSET_UPDATED("asset.updated"),
    ASSET_FAILED("asset.failed"),
    ASSET_READY("asset.ready"),
    ASSET_DELETED("asset.deleted"),
    TASK_SPAWNED("task.spawned"),
    TASK_UPDATED("task.updated"),
    TASK_COMPLETED("task.completed"),
    TASK_FAILED("task.failed");

    @JsonValue
    private final String value;

    private Events(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
}
