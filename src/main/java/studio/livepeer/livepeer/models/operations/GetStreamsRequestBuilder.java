/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package studio.livepeer.livepeer.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapitools.jackson.nullable.JsonNullable;
import studio.livepeer.livepeer.models.errors.SDKError;
import studio.livepeer.livepeer.utils.LazySingletonValue;
import studio.livepeer.livepeer.utils.Utils;


public class GetStreamsRequestBuilder {

    private Optional<? extends String> streamsonly = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetStreams sdk;

    public GetStreamsRequestBuilder(SDKMethodInterfaces.MethodCallGetStreams sdk) {
        this.sdk = sdk;
    }
                
    public GetStreamsRequestBuilder streamsonly(String streamsonly) {
        Utils.checkNotNull(streamsonly, "streamsonly");
        this.streamsonly = Optional.of(streamsonly);
        return this;
    }

    public GetStreamsRequestBuilder streamsonly(Optional<? extends String> streamsonly) {
        Utils.checkNotNull(streamsonly, "streamsonly");
        this.streamsonly = streamsonly;
        return this;
    }

    public GetStreamsResponse call() throws Exception {

        return sdk.getAll(
            streamsonly);
    }
}
