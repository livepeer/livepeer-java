overlay: 1.0.0
info:
  title: CodeSamples overlay for java target
  version: 0.0.0
actions:
  - target: $["paths"]["/multistream/target/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getMultistreamTarget
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetMultistreamTargetResponse res = sdk.multistream().get()
                            .id("<value>")
                            .call();

                        if (res.multistreamTarget().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/session/{id}/clips"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getSessionClips
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetSessionClipsResponse res = sdk.session().getClips()
                            .id("<value>")
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/asset"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getAssets
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetAssetsResponse res = sdk.asset().getAll()
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{parentId}/sessions"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getRecordedSessions
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetRecordedSessionsResponse res = sdk.session().getRecorded()
                            .parentId("<value>")
                            .record(studio.livepeer.livepeer.models.operations.Record.of(true))
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}/terminate"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: terminateStream
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        TerminateStreamResponse res = sdk.stream().terminate()
                            .id("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getRoom
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetRoomResponse res = sdk.room().get()
                            .id("<value>")
                            .call();

                        if (res.room().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteRoom
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteRoomResponse res = sdk.room().delete()
                            .id("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/access-control/signing-key"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createSigningKey
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        CreateSigningKeyResponse res = sdk.accessControl().create()
                            .call();

                        if (res.signingKey().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/task"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getTasks
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetTasksResponse res = sdk.task().getAll()
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook/{id}/log/{logId}/resend"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: resendWebhook
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        ResendWebhookResponse res = sdk.webhook().resendLog()
                            .id("<value>")
                            .logId("<value>")
                            .call();

                        if (res.webhookLog().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}/egress"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: stopRoomEgress
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        StopRoomEgressResponse res = sdk.room().stopEgress()
                            .id("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}/user/{userId}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteRoomUser
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteRoomUserResponse res = sdk.room().deleteUser()
                            .id("<value>")
                            .userId("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/data/usage/query"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getUsageMetrics
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetUsageMetricsRequest req = GetUsageMetricsRequest.builder()
                            .build();

                        GetUsageMetricsResponse res = sdk.metrics().getUsage()
                            .request(req)
                            .call();

                        if (res.usageMetric().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: java
          label: updateStream
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        UpdateStreamResponse res = sdk.stream().update()
                            .id("<value>")
                            .streamPatchPayload(StreamPatchPayload.builder()
                                .record(false)
                                .multistream(Multistream.builder()
                                    .targets(java.util.List.of(
                                        Target.builder()
                                            .profile("720p0")
                                            .videoOnly(false)
                                            .id("PUSH123")
                                            .spec(TargetSpec.builder()
                                                .url("rtmps://live.my-service.tv/channel/secretKey")
                                                .name("My target")
                                                .build())
                                            .build()))
                                    .build())
                                .playbackPolicy(PlaybackPolicy.builder()
                                    .type(Type.WEBHOOK)
                                    .webhookId("1bde4o2i6xycudoy")
                                    .webhookContext(java.util.Map.ofEntries(
                                        entry("streamerId", "my-custom-id")))
                                    .refreshInterval(600d)
                                    .build())
                                .profiles(java.util.List.of(
                                    FfmpegProfile.builder()
                                        .width(1280L)
                                        .name("720p")
                                        .height(857478L)
                                        .bitrate(3000000L)
                                        .fps(30L)
                                        .fpsDen(1L)
                                        .quality(23L)
                                        .gop("2")
                                        .profile(Profile.H264_BASELINE)
                                        .build()))
                                .build())
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}/user"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createRoomUser
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        CreateRoomUserResponse res = sdk.room().createUser()
                            .id("<value>")
                            .roomUserPayload(RoomUserPayload.builder()
                                .name("name")
                                .canPublish(true)
                                .canPublishData(true)
                                .build())
                            .call();

                        if (res.roomUserResponse().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/data/views/query/creator"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getCreatorViewershipMetrics
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetCreatorViewershipMetricsRequest req = GetCreatorViewershipMetricsRequest.builder()
                            .build();

                        GetCreatorViewershipMetricsResponse res = sdk.metrics().getCreatorViewership()
                            .request(req)
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/clip"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createClip
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        ClipPayload req = ClipPayload.builder()
                            .playbackId("eaw4nk06ts2d0mzb")
                            .startTime(1587667174725d)
                            .endTime(1587667174725d)
                            .name("My Clip")
                            .sessionId("de7818e7-610a-4057-8f6f-b785dc1e6f88")
                            .build();

                        CreateClipResponse res = sdk.stream().createClip()
                            .request(req)
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/asset/{assetId}"]["patch"]
    update:
      x-codeSamples:
        - lang: java
          label: updateAsset
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        UpdateAssetResponse res = sdk.asset().update()
                            .assetId("<value>")
                            .assetPatchPayload(AssetPatchPayload.builder()
                                .name("filename.mp4")
                                .playbackPolicy(PlaybackPolicy.builder()
                                    .type(Type.WEBHOOK)
                                    .webhookId("1bde4o2i6xycudoy")
                                    .webhookContext(java.util.Map.ofEntries(
                                        entry("streamerId", "my-custom-id")))
                                    .refreshInterval(600d)
                                    .build())
                                .build())
                            .call();

                        if (res.asset().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook/{id}/log/{logId}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWebhookLog
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetWebhookLogResponse res = sdk.webhook().getLog()
                            .id("<value>")
                            .logId("<value>")
                            .call();

                        if (res.webhookLog().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/transcode"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: transcodeVideo
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        TranscodePayload req = TranscodePayload.builder()
                            .input(Input.of(Input1.builder()
                                        .url("https://s3.amazonaws.com/bucket/file.mp4")
                                        .build()))
                            .storage(TranscodePayloadStorage.of(Storage1.builder()
                                        .type(StorageType.S3)
                                        .endpoint("https://gateway.storjshare.io")
                                        .bucket("outputbucket")
                                        .credentials(StorageCredentials.builder()
                                                .accessKeyId("AKIAIOSFODNN7EXAMPLE")
                                                .secretAccessKey("wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY")
                                                .build())
                                        .build()))
                            .outputs(Outputs.builder()
                                    .hls(Hls.builder()
                                        .path("/samplevideo/hls")
                                        .build())
                                    .mp4(Mp4.builder()
                                        .path("/samplevideo/mp4")
                                        .build())
                                    .fmp4(Fmp4.builder()
                                        .path("/samplevideo/fmp4")
                                        .build())
                                    .build())
                            .profiles(java.util.List.of(
                                TranscodeProfile.builder()
                                    .bitrate(3000000L)
                                    .width(1280L)
                                    .name("720p")
                                    .quality(23L)
                                    .fps(30L)
                                    .fpsDen(1L)
                                    .gop("2")
                                    .profile(TranscodeProfileProfile.H264_BASELINE)
                                    .encoder(TranscodeProfileEncoder.H264)
                                    .build()))
                            .build();

                        TranscodeVideoResponse res = sdk.transcode().create()
                            .request(req)
                            .call();

                        if (res.task().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}/user/{userId}"]["put"]
    update:
      x-codeSamples:
        - lang: java
          label: updateRoomUser
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        UpdateRoomUserResponse res = sdk.room().updateUser()
                            .id("<value>")
                            .userId("<value>")
                            .roomUserUpdatePayload(RoomUserUpdatePayload.builder()
                                .canPublish(true)
                                .canPublishData(true)
                                .build())
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/task/{taskId}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getTask
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetTaskResponse res = sdk.task().get()
                            .taskId("<value>")
                            .call();

                        if (res.task().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getStreams
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetStreamsResponse res = sdk.stream().getAll()
                            .streamsonly("<value>")
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWebhook
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetWebhookResponse res = sdk.webhook().get()
                            .id("<value>")
                            .call();

                        if (res.webhook().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}/user/{userId}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getRoomUser
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetRoomUserResponse res = sdk.room().getUser()
                            .id("<value>")
                            .userId("<value>")
                            .call();

                        if (res.getRoomUserResponse().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/access-control/signing-key/{keyId}"]["patch"]
    update:
      x-codeSamples:
        - lang: java
          label: updateSigningKey
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        UpdateSigningKeyResponse res = sdk.accessControl().update()
                            .keyId("<value>")
                            .requestBody(UpdateSigningKeyRequestBody.builder()
                                .build())
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}/clips"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getClips
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetClipsResponse res = sdk.stream().getClips()
                            .id("<value>")
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook/{id}"]["put"]
    update:
      x-codeSamples:
        - lang: java
          label: updateWebhook
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        UpdateWebhookResponse res = sdk.webhook().update()
                            .id("<value>")
                            .webhook(WebhookInput.builder()
                                .name("test_webhook")
                                .url("https://my-service.com/webhook")
                                .projectId("aac12556-4d65-4d34-9fb6-d1f0985eb0a9")
                                .events(java.util.List.of(
                                    Events.STREAM_STARTED,
                                    Events.STREAM_IDLE))
                                .sharedSecret("my-secret")
                                .streamId("de7818e7-610a-4057-8f6f-b785dc1e6f88")
                                .build())
                            .call();

                        if (res.webhook().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteWebhook
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteWebhookResponse res = sdk.webhook().delete()
                            .id("<value>")
                            .call();

                        if (res.webhook().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/asset/{assetId}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getAsset
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetAssetResponse res = sdk.asset().get()
                            .assetId("<value>")
                            .call();

                        if (res.asset().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/asset/{assetId}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteAsset
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteAssetResponse res = sdk.asset().delete()
                            .assetId("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/playback/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getPlaybackInfo
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetPlaybackInfoResponse res = sdk.playback().get()
                            .id("<value>")
                            .call();

                        if (res.playbackInfo().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.Error e) {
                        // handle exception
                        throw e;
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}/create-multistream-target"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: addMultistreamTarget
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        AddMultistreamTargetResponse res = sdk.stream().addMultistreamTarget()
                            .id("<value>")
                            .targetAddPayload(TargetAddPayload.builder()
                                .profile("720p0")
                                .videoOnly(false)
                                .id("PUSH123")
                                .spec(TargetAddPayloadSpec.builder()
                                    .url("rtmps://live.my-service.tv/channel/secretKey")
                                    .name("My target")
                                    .build())
                                .build())
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}/multistream/{targetId}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: removeMultistreamTarget
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        RemoveMultistreamTargetResponse res = sdk.stream().removeMultistreamTarget()
                            .id("<value>")
                            .targetId("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/multistream/target/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteMultistreamTarget
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteMultistreamTargetResponse res = sdk.multistream().delete()
                            .id("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createRoom
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        CreateRoomResponse res = sdk.room().create()
                            .call();

                        if (res.createRoomResponse().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/multistream/target/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: java
          label: updateMultistreamTarget
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        UpdateMultistreamTargetResponse res = sdk.multistream().update()
                            .id("<value>")
                            .multistreamTargetPatchPayload(MultistreamTargetPatchPayload.builder()
                                .url("rtmps://live.my-service.tv/channel/secretKey")
                                .build())
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createWebhook
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        WebhookInput req = WebhookInput.builder()
                            .name("test_webhook")
                            .url("https://my-service.com/webhook")
                            .projectId("aac12556-4d65-4d34-9fb6-d1f0985eb0a9")
                            .events(java.util.List.of(
                                Events.STREAM_STARTED,
                                Events.STREAM_IDLE))
                            .sharedSecret("my-secret")
                            .streamId("de7818e7-610a-4057-8f6f-b785dc1e6f88")
                            .build();

                        CreateWebhookResponse res = sdk.webhook().create()
                            .request(req)
                            .call();

                        if (res.webhook().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/session"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getSessions
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetSessionsResponse res = sdk.session().getAll()
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook/{id}/log"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWebhookLogs
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetWebhookLogsResponse res = sdk.webhook().getLogs()
                            .id("<value>")
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/data/views/query/total/{playbackId}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getPublicViewershipMetrics
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetPublicViewershipMetricsResponse res = sdk.metrics().getPublicViewership()
                            .playbackId("<value>")
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/access-control/signing-key"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getSigningKeys
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetSigningKeysResponse res = sdk.accessControl().getAll()
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/data/views/query"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getViewershipMetrics
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetViewershipMetricsRequest req = GetViewershipMetricsRequest.builder()
                            .build();

                        GetViewershipMetricsResponse res = sdk.metrics().getViewership()
                            .request(req)
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/access-control/signing-key/{keyId}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteSigningKey
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteSigningKeyResponse res = sdk.accessControl().delete()
                            .keyId("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/access-control/signing-key/{keyId}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getSigningKey
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetSigningKeyResponse res = sdk.accessControl().get()
                            .keyId("<value>")
                            .call();

                        if (res.signingKey().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createStream
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        NewStreamPayload req = NewStreamPayload.builder()
                            .name("test_stream")
                            .pull(Pull.builder()
                                .source("https://myservice.com/live/stream.flv")
                                .headers(java.util.Map.ofEntries(
                                    entry("Authorization", "Bearer 123")))
                                .location(Location.builder()
                                    .lat(39.739d)
                                    .lon(-104.988d)
                                    .build())
                                .build())
                            .playbackPolicy(PlaybackPolicy.builder()
                                .type(Type.WEBHOOK)
                                .webhookId("1bde4o2i6xycudoy")
                                .webhookContext(java.util.Map.ofEntries(
                                    entry("streamerId", "my-custom-id")))
                                .refreshInterval(600d)
                                .build())
                            .profiles(java.util.List.of(
                                FfmpegProfile.builder()
                                    .width(1280L)
                                    .name("720p")
                                    .height(486589L)
                                    .bitrate(3000000L)
                                    .fps(30L)
                                    .fpsDen(1L)
                                    .quality(23L)
                                    .gop("2")
                                    .profile(Profile.H264_BASELINE)
                                    .build()))
                            .record(false)
                            .recordingSpec(RecordingSpec.builder()
                                .profiles(java.util.List.of(
                                    FfmpegProfile.builder()
                                        .width(1280L)
                                        .name("720p")
                                        .height(489382L)
                                        .bitrate(3000000L)
                                        .fps(30L)
                                        .fpsDen(1L)
                                        .quality(23L)
                                        .gop("2")
                                        .profile(Profile.H264_BASELINE)
                                        .build()))
                                .build())
                            .multistream(Multistream.builder()
                                .targets(java.util.List.of(
                                    Target.builder()
                                        .profile("720p0")
                                        .videoOnly(false)
                                        .id("PUSH123")
                                        .spec(TargetSpec.builder()
                                            .url("rtmps://live.my-service.tv/channel/secretKey")
                                            .name("My target")
                                            .build())
                                        .build()))
                                .build())
                            .build();

                        CreateStreamResponse res = sdk.stream().create()
                            .request(req)
                            .call();

                        if (res.stream().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/multistream/target"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getMultistreamTargets
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetMultistreamTargetsResponse res = sdk.multistream().getAll()
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/multistream/target"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createMultistreamTarget
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        MultistreamTargetInput req = MultistreamTargetInput.builder()
                            .url("rtmps://live.my-service.tv/channel/secretKey")
                            .build();

                        CreateMultistreamTargetResponse res = sdk.multistream().create()
                            .request(req)
                            .call();

                        if (res.multistreamTarget().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getStream
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetStreamResponse res = sdk.stream().get()
                            .id("<value>")
                            .call();

                        if (res.stream().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteStream
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        DeleteStreamResponse res = sdk.stream().delete()
                            .id("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/webhook"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWebhooks
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetWebhooksResponse res = sdk.webhook().getAll()
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/session/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getSession
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        GetSessionResponse res = sdk.session().get()
                            .id("<value>")
                            .call();

                        if (res.session().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/room/{id}/egress"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: startRoomEgress
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        StartRoomEgressResponse res = sdk.room().startEgress()
                            .id("<value>")
                            .roomEgressPayload(RoomEgressPayload.builder()
                                .streamId("aac12556-4d65-4d34-9fb6-d1f0985eb0a9")
                                .build())
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/stream/{id}/start-pull"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: startPullStream
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        StartPullStreamResponse res = sdk.stream().startPull()
                            .id("<value>")
                            .call();

                        // handle response
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/asset/request-upload"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: requestUpload
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        NewAssetPayload req = NewAssetPayload.builder()
                            .name("filename.mp4")
                            .staticMp4(true)
                            .playbackPolicy(PlaybackPolicy.builder()
                                .type(Type.WEBHOOK)
                                .webhookId("1bde4o2i6xycudoy")
                                .webhookContext(java.util.Map.ofEntries(
                                    entry("streamerId", "my-custom-id")))
                                .refreshInterval(600d)
                                .build())
                            .profiles(java.util.List.of(
                                TranscodeProfile.builder()
                                    .bitrate(3000000L)
                                    .width(1280L)
                                    .name("720p")
                                    .quality(23L)
                                    .fps(30L)
                                    .fpsDen(1L)
                                    .gop("2")
                                    .profile(TranscodeProfileProfile.H264_BASELINE)
                                    .encoder(TranscodeProfileEncoder.H264)
                                    .build()))
                            .build();

                        RequestUploadResponse res = sdk.asset().create()
                            .request(req)
                            .call();

                        if (res.data().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
  - target: $["paths"]["/asset/upload/url"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: uploadAsset
          source: |-
            package hello.world;

            import java.math.BigDecimal;
            import java.math.BigDecimal;
            import java.math.BigInteger;
            import java.time.LocalDate;
            import java.time.OffsetDateTime;
            import java.util.Optional;
            import org.openapitools.jackson.nullable.JsonNullable;
            import static java.util.Map.entry;
            import studio.livepeer.livepeer.Livepeer;
            import studio.livepeer.livepeer.models.components.*;
            import studio.livepeer.livepeer.models.components.Security;
            import studio.livepeer.livepeer.models.operations.*;
            import studio.livepeer.livepeer.utils.EventStream;

            public class Application {

                public static void main(String[] args) throws Exception {
                    try {
                        Livepeer sdk = Livepeer.builder()
                            .apiKey("<YOUR_BEARER_TOKEN_HERE>")
                            .build();

                        NewAssetFromUrlPayload req = NewAssetFromUrlPayload.builder()
                            .name("filename.mp4")
                            .url("https://s3.amazonaws.com/my-bucket/path/filename.mp4")
                            .staticMp4(true)
                            .playbackPolicy(PlaybackPolicy.builder()
                                .type(Type.WEBHOOK)
                                .webhookId("1bde4o2i6xycudoy")
                                .webhookContext(java.util.Map.ofEntries(
                                    entry("streamerId", "my-custom-id")))
                                .refreshInterval(600d)
                                .build())
                            .profiles(java.util.List.of(
                                TranscodeProfile.builder()
                                    .bitrate(3000000L)
                                    .width(1280L)
                                    .name("720p")
                                    .quality(23L)
                                    .fps(30L)
                                    .fpsDen(1L)
                                    .gop("2")
                                    .profile(TranscodeProfileProfile.H264_BASELINE)
                                    .encoder(TranscodeProfileEncoder.H264)
                                    .build()))
                            .build();

                        UploadAssetResponse res = sdk.asset().createViaUrl()
                            .request(req)
                            .call();

                        if (res.twoHundredApplicationJsonData().isPresent()) {
                            // handle response
                        }
                    } catch (studio.livepeer.livepeer.models.errors.SDKError e) {
                        // handle exception
                        throw e;
                    } catch (Exception e) {
                        // handle exception
                        throw e;
                    }
                }
            }
